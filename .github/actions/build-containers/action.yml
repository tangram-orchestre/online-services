name: Build Containers
description: Build Containers

inputs:
  PUSH_TO_REGISTRY:
    description: Push to registry
    required: false
    default: "false"
  TAG:
    description: Tag for docker
  FORCE_BUILD:
    description: Force build
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Detect Changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        base: ${{ inputs.TAG }}
        filters: |
          backend:
            - 'services/backend/**'
            - 'services/showcase-website/**'
            - 'services/portal/**'
            - '.github/actions/build-containers/action.yml'
          showcase-website:
            - 'services/showcase-website/**'
            - '.github/actions/build-containers/action.yml'
          portal:
            - 'services/portal/**'
            - '.github/actions/build-containers/action.yml'

    - name: Configure env
      shell:  bash
      run: |
        echo "BACKEND_IMAGE_NAME=${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/backend" >> $GITHUB_ENV
        echo "SHOWCASE_WEBSITE_IMAGE_NAME=${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/showcase-website" >> $GITHUB_ENV
        echo "PORTAL_IMAGE_NAME=${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/portal" >> $GITHUB_ENV

        echo BACKEND_NEEDS_BUILD=${{ inputs.FORCE_BUILD == 'true' || steps.changes.outputs.backend == 'true' }} >> $GITHUB_ENV

    - name: Retrieve reference OpenAPI spec md5sum
      shell:  bash
      run: |
        echo REFERENCE_PRIVATE_OPENAPI_SPEC_MD5SUM=`docker manifest inspect -v ${{ env.PORTAL_IMAGE_NAME }}:${{ inputs.TAG }} \
          | jq -r '.[0].OCIManifest.annotations.PRIVATE_OPENAPI_SPEC_MD5SUM'` | tee -a $GITHUB_ENV
        echo REFERENCE_PUBLIC_OPENAPI_SPEC_MD5SUM=`docker manifest inspect -v ${{ env.SHOWCASE_WEBSITE_IMAGE_NAME }}:${{ inputs.TAG }} \
          | jq -r '.[0].OCIManifest.annotations.PUBLIC_OPENAPI_SPEC_MD5SUM'` | tee -a $GITHUB_ENV

    - name: Docker meta Backend
      if: env.BACKEND_NEEDS_BUILD == 'true'
      id: meta-backend
      uses: docker/metadata-action@v5
      with:
        tags: |
          type=raw,value=${{ inputs.TAG }}
          type=sha,format=long
        images: ${{ env.BACKEND_IMAGE_NAME }}

    - name: Build and push Backend, baking in OpenAPI spec md5sum
      if: env.BACKEND_NEEDS_BUILD == 'true'
      id: push-backend
      uses: docker/build-push-action@v6
      with:
        context: services/backend
        push: ${{ inputs.PUSH_TO_REGISTRY }}
        load: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        annotations: ${{ steps.meta-backend.outputs.annotations }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate OpenAPI spec
      if: env.BACKEND_NEEDS_BUILD == 'true'
      id: generate-openapi-spec
      shell: bash
      run: |
        cd services
        docker run --rm \
          -v ./openapi:/opt/openapi \
          -e PUBLIC_OPENAPI_SPEC_PATH=/opt/openapi/public-spec.json \
          -e PRIVATE_OPENAPI_SPEC_PATH=/opt/openapi/private-spec.json \
          ${{ env.BACKEND_IMAGE_NAME }}:sha-${{ github.sha }}

        cp openapi/public-spec.json showcase-website/public-spec.json
        cp openapi/private-spec.json portal/private-spec.json

        echo PUBLIC_OPENAPI_SPEC_MD5SUM=`md5sum openapi/public-spec.json | awk '{ print $1 }'` | tee -a $GITHUB_ENV
        echo PRIVATE_OPENAPI_SPEC_MD5SUM=`md5sum openapi/private-spec.json | awk '{ print $1 }'` | tee -a $GITHUB_ENV


    - name: Determine if Showcase Website & Portal needs to be built
      shell:  bash
      run: |
        echo "PRIVATE_SPEC_MD5SUM: '${{ env.PRIVATE_OPENAPI_SPEC_MD5SUM || 'none' }}' (ref: '${{ env.REFERENCE_PRIVATE_OPENAPI_SPEC_MD5SUM }}')"
        echo "PUBLIC_SPEC_MD5SUM: '${{ env.PUBLIC_OPENAPI_SPEC_MD5SUM || 'none' }}' (ref: '${{ env.REFERENCE_PUBLIC_OPENAPI_SPEC_MD5SUM }}')"

        echo SHOWCASE_WEBSITE_NEEDS_BUILD=${{
          inputs.FORCE_BUILD == 'true' ||
          steps.changes.outputs.showcase-website == 'true' ||
          (env.BACKEND_NEEDS_BUILD == 'true' && env.PUBLIC_OPENAPI_SPEC_MD5SUM != env.REFERENCE_PUBLIC_OPENAPI_SPEC_MD5SUM)
        }} >> $GITHUB_ENV
        echo PORTAL_NEEDS_BUILD=${{
          inputs.FORCE_BUILD == 'true' ||
          steps.changes.outputs.portal == 'true' ||
          (env.BACKEND_NEEDS_BUILD == 'true' && env.PRIVATE_OPENAPI_SPEC_MD5SUM != env.REFERENCE_PRIVATE_OPENAPI_SPEC_MD5SUM)
        }} >> $GITHUB_ENV


    # Only download images if we're deploying the image, they're not needed to
    # check the build is passing and LFS bandwidth is limited.
    - name: Download LFS images
      if: inputs.PUSH_TO_REGISTRY == 'true' && env.SHOWCASE_WEBSITE_NEEDS_BUILD == 'true'
      shell: bash
      run: git lfs pull --include "services/showcase-website/**"

    - name: Docker meta Showcase Website
      if: env.SHOWCASE_WEBSITE_NEEDS_BUILD == 'true'
      id: meta-showcase-website
      uses: docker/metadata-action@v5
      with:
        tags: |
          type=raw,value=${{ inputs.TAG }}
          type=sha,format=long
        annotations: |
          PUBLIC_OPENAPI_SPEC_MD5SUM=${{ env.PUBLIC_OPENAPI_SPEC_MD5SUM }}
        images: ${{ env.SHOWCASE_WEBSITE_IMAGE_NAME }}

    - name: Build and push Showcase Website
      if: env.SHOWCASE_WEBSITE_NEEDS_BUILD == 'true'
      id: push-showcase-website
      uses: docker/build-push-action@v6
      with:
        context: services/showcase-website
        push: ${{ inputs.PUSH_TO_REGISTRY }}
        tags: ${{ steps.meta-showcase-website.outputs.tags }}
        labels: ${{ steps.meta-showcase-website.outputs.labels }}
        annotations: ${{ steps.meta-showcase-website.outputs.annotations }}


    - name: Docker meta Portal
      if: env.PORTAL_NEEDS_BUILD == 'true'
      id: meta-portal
      uses: docker/metadata-action@v5
      with:
        tags: |
          type=raw,value=${{ inputs.TAG }}
          type=sha,format=long
        annotations: |
          PRIVATE_OPENAPI_SPEC_MD5SUM=${{ env.PRIVATE_OPENAPI_SPEC_MD5SUM }}
        images: ${{ env.PORTAL_IMAGE_NAME }}

    - name: Build and push Portal
      if: env.PORTAL_NEEDS_BUILD == 'true'
      id: push-portal
      uses: docker/build-push-action@v6
      with:
        context: services/portal
        push: ${{ inputs.PUSH_TO_REGISTRY }}
        tags: ${{ steps.meta-portal.outputs.tags }}
        labels: ${{ steps.meta-portal.outputs.labels }}
        annotations: ${{ steps.meta-portal.outputs.annotations }}
