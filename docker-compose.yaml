services:
  # Backend service running Poem OpenAPI.
  backend:
    build: ./backend/dev
    init: true
    volumes:
      - ./scripts:/opt/scripts:ro
      - ./backend:/opt/backend
      - ./openapi:/opt/openapi # dev.sh will write spec.json here.

      # Use anonymous volumes to cache data on container config change.
      - backend_cargo_target_dir:/opt/cargo_target_dir
      - backend_cargo_registry:/opt/cargo_home/registry

    working_dir: /opt/backend
    environment:
      - CARGO_TARGET_DIR=/opt/cargo_target_dir
      - APP_CORS_ORIGINS=https://localhost,https://api.localhost
    command: watchexec --restart -- ./dev/dev.sh
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`api.localhost`)
      - traefik.http.services.backend.loadbalancer.server.port=3000
      - traefik.http.routers.backend.tls=true

  showcase-website:
    build: ./showcase-website/dev
    volumes:
      - ./scripts:/opt/scripts:ro
      - ./showcase-website:/opt/showcase-website
      - ./openapi:/opt/openapi # dev.sh will write spec.json here.
    working_dir: /opt/showcase-website
    command: bash -c "FORCE_COLOR=1 yarn install && FORCE_COLOR=1 yarn run dev2"
    environment:
      - PRIVATE_API_BASE_URL=http://backend:3000
      - PUBLIC_API_BASE_URL=https://api.localhost
    tmpfs:
      - /tmp
    labels:
      - traefik.enable=true
      - traefik.http.routers.showcase-website.rule=Host(`localhost`)
      - traefik.http.services.showcase-website.loadbalancer.server.port=3000
      - traefik.http.routers.showcase-website.tls=true

  traefik:
    image: traefik:v3.0
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dev/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./dev/traefik/dynamic-conf:/etc/traefik/dynamic-conf
      - ./dev/traefik/certs:/etc/traefik/certs
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.tls=true

volumes:
  backend_cargo_target_dir:
  backend_cargo_registry:
